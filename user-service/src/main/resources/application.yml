server:
  port: 9002

# 加密所需的salt(盐)
jasypt:
  encryptor:
    password: Jl6Hzhy6Lsh6Mhl

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:9000/eureka/
  instance:
    #主机名称
    hostname: ${spring.cloud.client.ip-address}
    lease-expiration-duration-in-seconds: 90
    lease-renewal-interval-in-seconds: 30
    preferIpAddress: true
    instance_id: ${spring.cloud.client.ip-address}:${server.port}

spring:
  application:
    name: user-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/springcloud_exmaple?useUnicode=true&characterEncoding=utf8&autoReconnect=true&failOverReadOnly=true&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: root
    druid:
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1
        # IP黑名单 (存在共同时，deny优先于allow)
        deny: 100.100.100.100
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: admin
        # 登录密码
        login-password: 123456
  redis:
    redisson:
      config: classpath:redisson-single.yml
  scheduled:
    assign-server: 10.177.16.85

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  hystrix:
    enabled: true

hystrix:
  default:
    #并发执行的最大线程数，默认10
    coreSize: 200
    #BlockingQueue的最大队列数，默认值-1
    maxQueueSize: 1000
    #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝，默认值5
    queueSizeRejectionThreshold: 800
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 15000

ribbon:
  eureka:
    enabled: true
  # 请求处理的超时时间，下级服务响应最大时间，如果超出设置的时间，消费方（路由也是消费方）返回timeout
  ReadTimeout: 5000 # default 5000
  # 请求连接的超时时间，限制2秒内必须请求到服务，并不限制服务处理的返回时间
  ConnectTimeout: 2000 # default 2000
  #单个后端微服务实例能接收的最大请求并发数
  MaxConnectionPerHost: 500
  # Ribbon允许最大连接数，即所有后端微服务实例请求并发数之和的最大值。
  MaxTotalConnections: 1000
  #ribbon的最大工作线程数
  PoolMaxThreads: 1000
  # 对当前实例的重试次数，默认0
  #MaxAutoRetries: 0
  # 对切换实例的重试次数，默认1
  #MaxAutoRetriesNextServer: 1
logging:
  level:
    com.ejoy: debug
    com.chippy.example: debug

elastic-job:
  reg-center:
    server-list: localhost:2181
    namespace: oak-job
    max-retries: 3
    max-sleep-time-ms: 3000
    session-timeout-ms: 5000
  fail-retry-server-ip: 192.168.0.112